####
# To build the image run:
#
# docker build -f src/main/docker/Dockerfile.legacy-jar-multistage -t quarkus/mflow-crud-legacy-jar .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 quarkus/mflow-crud-legacy-jar
###

## Stage 1 : build with maven builder image
FROM quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21 AS build
COPY --chown=quarkus:quarkus mvnw /usr/src/app/mvnw
COPY --chown=quarkus:quarkus .mvn /usr/src/app/.mvn
COPY --chown=quarkus:quarkus pom.xml /usr/src/app/
WORKDIR /usr/src/app
RUN ./mvnw -B org.apache.maven.plugins:maven-dependency-plugin:3.1.2:go-offline
COPY src /usr/src/app/src
RUN ./mvnw package -Dquarkus.package.jar.type=legacy-jar

## Stage 2 : create the docker final image
FROM registry.access.redhat.com/ubi8/openjdk-21:1.19

ENV LANGUAGE='en_US:en'

COPY --from=build /usr/src/app/target/lib/* /deployments/lib/
COPY --from=build /usr/src/app/target/*-runner.jar /deployments/quarkus-run.jar

EXPOSE 8080
USER 185
ENV JAVA_OPTS_APPEND="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
ENV JAVA_APP_JAR="/deployments/quarkus-run.jar"

ENTRYPOINT [ "/opt/jboss/container/java/run/run-java.sh" ]
